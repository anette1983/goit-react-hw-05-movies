{"version":3,"file":"static/js/974.60df08f7.chunk.js","mappings":"iLAIMA,EAAS,SAAAC,GAAK,OAChB,UAAC,MAAD,gBACEC,QAAQ,cACRC,OAAQ,IACRC,MAAO,IACPC,MAAM,UACNC,gBAAgB,UAChBC,MAAO,CAAEH,MAAO,SACZH,GAPN,eASE,mBAAQO,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAC3B,mBAAQF,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAC3B,mBAAQF,GAAG,MAAMC,GAAG,KAAKC,EAAE,SAZb,EAgBlBV,EAAOW,SAAW,CAChBC,KAAM,OACNC,OAAQ,aACRC,YAAa,aACbC,SAAU,aAgBZ,K,kMCpCIC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,KAAPD,CAAH,6QAgBHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAmBE,KAAK,OACvBD,IAGN,ECzBYE,EAAmBN,EAAAA,GAAAA,IAAH,uHAQhBO,EAAsBP,EAAAA,GAAAA,IAAH,wnB,mBCkGhC,EAnGqB,WAAO,IAAD,IAEjBQ,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAG3D,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAGMC,EAAe,mCAAG,WAAMC,GAAN,8EACtBJ,GAAa,GADS,mBAGDK,EAAAA,EAAAA,IAAkBD,GAHjB,OAGdE,EAHc,OAIpBR,EAASQ,GAJW,gDAMpBJ,EAAS,EAAD,IANY,yBAQpBF,GAAa,GARO,4EAAH,uDAcrBO,EAAAA,EAAAA,YAAU,WACHnB,GAGLe,EAAgBf,EACjB,GAAE,CAACA,IAQJ,IACEoB,EAMEX,EANFW,eACAC,EAKEZ,EALFY,SACAC,EAIEb,EAJFa,OACAC,EAGEd,EAHFc,YACAC,EAEEf,EAFFe,aACAC,EACEhB,EADFgB,aAEIC,GAA4B,GAAfF,GAAmBG,QAAQ,GACxCC,EAAU,IAAIC,KAAKJ,GAAcK,cAEvC,OACE,iCAEE,SAACpC,EAAD,CAAUC,GAAIS,EAAoB2B,QAAlC,qBAEClB,IAAS,oEACTF,GAAY,SAACpC,EAAA,EAAD,KACb,UAACuB,EAAD,YACE,gBACEkC,IACET,EAAW,yCAC2BA,GAD3B,UAEJU,GAETC,IAAI,SAASvD,MAAM,MAAMwD,QAAQ,UAEnC,4BACE,0BACGf,EADH,KACqBQ,EADrB,QAGA,wCAAgBF,EAAhB,QACA,sCACA,uBAAIL,KACJ,oCACA,wBACS,OAANC,QAAM,IAANA,OAAA,EAAAA,EAAQc,SACPd,EAAOe,KAAI,gBAAGrB,EAAH,EAAGA,GAAI7B,EAAP,EAAOA,KAAP,OAAkB,4BAAgBA,EAAhB,MAAW6B,EAA7B,aAInB,UAACjB,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,EAAAN,KAAD,CAAME,GAAG,OAAT,qBAEF,yBACE,SAAC,EAAAF,KAAD,CAAME,GAAG,UAAT,8BAIN,SAAC,EAAA2C,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,kMCxGDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACVC,EAAe,qCAAiCD,GAEzCE,EAAmB,mCAAG,oGACVH,EAAAA,EAAAA,IAAA,UAClBE,IAF4B,cAC3BE,EAD2B,yBAI5BA,EAAS1B,MAJmB,2CAAH,qDAOnBD,EAAiB,mCAAG,WAAOD,GAAP,uFACNwB,EAAAA,EAAAA,IAAA,gBACVxB,EADU,oBACIyB,EADJ,oBADM,cACvBG,EADuB,yBAKtBA,EAAS1B,MALa,2CAAH,sDASjB2B,EAAS,mCAAG,WAAO7B,GAAP,uFACAwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,4BACUyB,EADV,oBADA,cACjBG,EADiB,yBAKlBA,EAAS1B,MALS,2CAAH,sDAQT4B,EAAY,mCAAG,WAAO9B,GAAP,uFACHwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,4BACUyB,EADV,oBADG,cACpBG,EADoB,yBAKrBA,EAAS1B,MALY,2CAAH,sDASZ6B,EAAY,mCAAG,WAAOC,GAAP,uFACHR,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCO,EADnC,gCADG,cACpBJ,EADoB,yBAKrBA,EAAS1B,MALY,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/BackLink/Backlink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport ContentLoader from 'react-content-loader';\n// import { Watch } from  'react-loader-spinner'\n\nconst Loader = props => (\n    <ContentLoader\n      viewBox=\"0 0 400 160\"\n      height={160}\n      width={400}\n      color=\"#3f51b5\"\n      backgroundColor=\"#3f51b5\"\n      style={{ width: '100%' }}\n      {...props}\n    >\n      <circle cx=\"150\" cy=\"86\" r=\"8\" />\n      <circle cx=\"194\" cy=\"86\" r=\"8\" />\n      <circle cx=\"238\" cy=\"86\" r=\"8\" />\n    </ContentLoader>\n  )\n  \n  Loader.metadata = {\n    name: 'RioF',\n    github: 'clariokids',\n    description: 'Three Dots',\n    filename: 'ThreeDots',\n  }\n\n// {/* <Watch\n//   height=\"80\"\n//   width=\"80\"\n//   radius=\"48\"\n//   color=\"#3f51b5\"\n//   ariaLabel=\"watch-loading\"\n//   wrapperStyle={{\n//     display: 'block',\n//     margin: '0 auto',\n//   }}\n//   visible={true}\n// /> */}\n  \n  export default Loader;","import { HiArrowNarrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  /* padding: 8px 0; */\n  padding: 24px 8px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowNarrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};","import styled from \"styled-components\";\n\nexport const StyledWrapperDiv = styled.div`\npadding: 16px;\ndisplay: flex;\nalign-items: flex-start;\ngap: 16px;\n/* max-width: 80%; */\n\n`\nexport const StyledAdditionalDiv = styled.div`\npadding: 16px;\nborder-top: 1px solid #ececec;\nborder-bottom: 1px solid #ececec;\nul {\n    /* list-style: inside; */\n    margin: 16px;\n}\nli {\n    margin-bottom: 8px;\n}\na {\n    /* color: inherit;\n    font-size: 18px; */\n    color: black;\n    text-decoration: none;\n    font-weight: 500;\n    text-transform: uppercase;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),transform 250ms cubic-bezier(0.4, 0, 0.2, 1),-webkit-transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover, &:focus, &:active {\n        color: orangered;\n}\n}\n`","import { useEffect, useState, useRef } from 'react';\nimport { Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport { BackLink } from 'components/BackLink/Backlink';\nimport { StyledAdditionalDiv, StyledWrapperDiv } from './MovieDetails.styled';\nimport placeholder from '../../images/placeholder.png'\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  //params\n  const { movieId } = useParams();\n  //loaction\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  // const backLinkHref = location.state?.from ?? \"/\";\n  //state\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  //movieQuery\n  const getMovieDetails = async id => {\n    setIsLoading(true);\n    try {\n      const data = await fetchMovieDetails(id);\n      setMovie(data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  //effect\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  // const movie = getMovieById(movieId);\n  // Стейт, излоeдинг, ерорр Делаем запрос, записываем в стейи рендерим нужн разметку\n  // useEffect(() => {\n\n  // }, [])\n\n  const {\n    original_title,\n    overview,\n    genres,\n    poster_path,\n    vote_average,\n    release_date,\n  } = movie;\n  const userScore = (vote_average * 10).toFixed(1);\n  const getYear = new Date(release_date).getFullYear();\n\n  return (\n    <>\n      {/* <BackLink to={backLinkHref}>Go back</BackLink> */}\n      <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n      {/* При нажатии на один фильм, открыв страница этого фильма по айди и нужна ссылка, по которой сможем вернуться назада туда, откуда пришли */}\n      {error && <p>Something went wrong :( Try again later!</p>}\n      {isLoading ? <Loader/> :\n      <StyledWrapperDiv>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `${placeholder}`\n          }\n          alt=\"poster\" width=\"300\" loading=\"lazy\"\n        />\n        <div>\n          <h1>\n            {original_title} ({getYear})\n          </h1>\n          <p>User score: {userScore}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres?.length &&\n              genres.map(({ id, name }) => <span key={id}>{name} </span>)}\n          </p>\n        </div>\n      </StyledWrapperDiv>}\n      <StyledAdditionalDiv>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </StyledAdditionalDiv>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'db7375c0f22b53ce13cc7eb00cc2cfa1';\nconst trendingOptions = `trending/movie/day?api_key=${API_KEY}`;\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${trendingOptions}`\n  );\nreturn response.data;\n};\n\nexport const fetchMovieDetails = async (id) => {\n    const response = await axios.get(\n        `movie/${id}?api_key=${API_KEY}&language=en-US`\n      );\n      \n    return response.data;\n}\n\n\nexport const fetchCast = async (id) => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  \nreturn response.data;\n}\n\nexport const fetchReviews = async (id) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  \nreturn response.data;\n}\n\n\nexport const searchMovies = async (query) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  \nreturn response.data;\n}\n\n\n"],"names":["Loader","props","viewBox","height","width","color","backgroundColor","style","cx","cy","r","metadata","name","github","description","filename","StyledLink","styled","Link","BackLink","to","children","size","StyledWrapperDiv","StyledAdditionalDiv","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movie","setMovie","isLoading","setIsLoading","error","setError","getMovieDetails","id","fetchMovieDetails","data","useEffect","original_title","overview","genres","poster_path","vote_average","release_date","userScore","toFixed","getYear","Date","getFullYear","current","src","placeholder","alt","loading","length","map","Suspense","fallback","axios","API_KEY","trendingOptions","fetchTrendingMovies","response","fetchCast","fetchReviews","searchMovies","query"],"sourceRoot":""}