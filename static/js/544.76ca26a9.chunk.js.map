{"version":3,"file":"static/js/544.76ca26a9.chunk.js","mappings":"iLAIMA,EAAS,SAAAC,GAAK,OAChB,UAAC,MAAD,gBACEC,QAAQ,cACRC,OAAQ,IACRC,MAAO,IACPC,MAAM,UACNC,gBAAgB,UAChBC,MAAO,CAAEH,MAAO,SACZH,GAPN,eASE,mBAAQO,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAC3B,mBAAQF,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAC3B,mBAAQF,GAAG,MAAMC,GAAG,KAAKC,EAAE,SAZb,EAgBlBV,EAAOW,SAAW,CAChBC,KAAM,OACNC,OAAQ,aACRC,YAAa,aACbC,SAAU,aAgBZ,K,mICOF,UAzCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAiB,mCAAG,2FACxBH,GAAa,GADW,mBAGHI,EAAAA,EAAAA,MAHG,OAGhBC,EAHgB,OAItBP,EAAUO,EAAKC,SAJO,gDAMtBJ,EAAS,EAAD,IANc,yBAQtBF,GAAa,GARS,4EAAH,qDAkBvB,OALAO,EAAAA,EAAAA,YAAU,WAERJ,GACD,GAAE,KAGC,UAAC,IAAD,WACGF,IAAS,qEACR,4CACA,wBACGJ,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,eAAgBjB,EAAnB,EAAmBA,KAAMkB,EAAzB,EAAyBA,GAAzB,OACV,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAK,KAAzC,SACGL,GAAkBjB,KAFdkB,EADC,MAQfX,IAAa,SAAC,IAAD,MAGrB,C,sEC3CYgB,E,QAAYC,GAAAA,IAAH,uc,kMCAtBC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACVC,EAAe,qCAAiCD,GAEzCd,EAAmB,mCAAG,oGACVa,EAAAA,EAAAA,IAAA,UAClBE,IAF4B,cAC3BC,EAD2B,yBAI5BA,EAASf,MAJmB,2CAAH,qDAOnBgB,EAAiB,mCAAG,WAAOX,GAAP,uFACNO,EAAAA,EAAAA,IAAA,gBACVP,EADU,oBACIQ,EADJ,oBADM,cACvBE,EADuB,yBAKtBA,EAASf,MALa,2CAAH,sDASjBiB,EAAS,mCAAG,WAAOZ,GAAP,uFACAO,EAAAA,EAAAA,IAAA,gBACZP,EADY,4BACUQ,EADV,oBADA,cACjBE,EADiB,yBAKlBA,EAASf,MALS,2CAAH,sDAQTkB,EAAY,mCAAG,WAAOb,GAAP,uFACHO,EAAAA,EAAAA,IAAA,gBACZP,EADY,4BACUQ,EADV,oBADG,cACpBE,EADoB,yBAKrBA,EAASf,MALY,2CAAH,sDASZmB,EAAY,mCAAG,WAAOC,GAAP,uFACHR,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCO,EADnC,gCADG,cACpBL,EADoB,yBAKrBA,EAASf,MALY,2CAAH,qD","sources":["components/Loader/Loader.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.js","services/api.js"],"sourcesContent":["import React from 'react';\nimport ContentLoader from 'react-content-loader';\n// import { Watch } from  'react-loader-spinner'\n\nconst Loader = props => (\n    <ContentLoader\n      viewBox=\"0 0 400 160\"\n      height={160}\n      width={400}\n      color=\"#3f51b5\"\n      backgroundColor=\"#3f51b5\"\n      style={{ width: '100%' }}\n      {...props}\n    >\n      <circle cx=\"150\" cy=\"86\" r=\"8\" />\n      <circle cx=\"194\" cy=\"86\" r=\"8\" />\n      <circle cx=\"238\" cy=\"86\" r=\"8\" />\n    </ContentLoader>\n  )\n  \n  Loader.metadata = {\n    name: 'RioF',\n    github: 'clariokids',\n    description: 'Three Dots',\n    filename: 'ThreeDots',\n  }\n\n// {/* <Watch\n//   height=\"80\"\n//   width=\"80\"\n//   radius=\"48\"\n//   color=\"#3f51b5\"\n//   ariaLabel=\"watch-loading\"\n//   wrapperStyle={{\n//     display: 'block',\n//     margin: '0 auto',\n//   }}\n//   visible={true}\n// /> */}\n  \n  export default Loader;","import { StyledDiv } from 'pages/Home/Home.styled';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'services/api';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const getTrendingMovies = async () => {\n    setIsLoading(true);\n    try {\n      const data = await fetchTrendingMovies();\n      setMovies(data.results);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n    \n  };\n\n  useEffect(() => {\n   \n    getTrendingMovies();\n  }, []);\n\n  return (\n      <StyledDiv>\n        {error && <p>Something went wrong :( Try again later!</p>}\n          <h1>Trending today</h1>\n          <ul>\n            {movies.map(({ original_title, name, id }) => (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: `/` }}>\n                  {original_title || name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        {isLoading && <Loader />}\n      </StyledDiv>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const StyledDiv = styled.div`\npadding: 16px;\n\nul {\n    list-style: inside;\n\n\n    \n}\nli {\n    margin-bottom: 8px;\n}\n\na {\n    color: inherit;\n    font-size: 18px;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),transform 250ms cubic-bezier(0.4, 0, 0.2, 1),-webkit-transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover, &:focus, &:active {\n        color: red;\n        \n    }\n}\n\n`","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'db7375c0f22b53ce13cc7eb00cc2cfa1';\nconst trendingOptions = `trending/movie/day?api_key=${API_KEY}`;\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${trendingOptions}`\n  );\nreturn response.data;\n};\n\nexport const fetchMovieDetails = async (id) => {\n    const response = await axios.get(\n        `movie/${id}?api_key=${API_KEY}&language=en-US`\n      );\n      \n    return response.data;\n}\n\n\nexport const fetchCast = async (id) => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  \nreturn response.data;\n}\n\nexport const fetchReviews = async (id) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  \nreturn response.data;\n}\n\n\nexport const searchMovies = async (query) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  \nreturn response.data;\n}\n\n\n"],"names":["Loader","props","viewBox","height","width","color","backgroundColor","style","cx","cy","r","metadata","name","github","description","filename","useState","movies","setMovies","isLoading","setIsLoading","error","setError","getTrendingMovies","fetchTrendingMovies","data","results","useEffect","map","original_title","id","Link","to","state","from","StyledDiv","styled","axios","API_KEY","trendingOptions","response","fetchMovieDetails","fetchCast","fetchReviews","searchMovies","query"],"sourceRoot":""}