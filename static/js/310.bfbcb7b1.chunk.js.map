{"version":3,"file":"static/js/310.bfbcb7b1.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","pages/Home/Home.styled.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport ContentLoader from 'react-content-loader';\n// import { Watch } from  'react-loader-spinner'\n\nconst Loader = props => (\n    <ContentLoader\n      viewBox=\"0 0 400 160\"\n      height={160}\n      width={400}\n      color=\"#3f51b5\"\n      backgroundColor=\"#3f51b5\"\n      style={{ width: '100%' }}\n      {...props}\n    >\n      <circle cx=\"150\" cy=\"86\" r=\"8\" />\n      <circle cx=\"194\" cy=\"86\" r=\"8\" />\n      <circle cx=\"238\" cy=\"86\" r=\"8\" />\n    </ContentLoader>\n  )\n  \n  Loader.metadata = {\n    name: 'RioF',\n    github: 'clariokids',\n    description: 'Three Dots',\n    filename: 'ThreeDots',\n  }\n\n// {/* <Watch\n//   height=\"80\"\n//   width=\"80\"\n//   radius=\"48\"\n//   color=\"#3f51b5\"\n//   ariaLabel=\"watch-loading\"\n//   wrapperStyle={{\n//     display: 'block',\n//     margin: '0 auto',\n//   }}\n//   visible={true}\n// /> */}\n  \n  export default Loader;","import styled from \"styled-components\";\n\nexport const StyledDiv = styled.div`\npadding: 16px;\n\nul {\n    list-style: inside;\n\n\n    \n}\nli {\n    margin-bottom: 8px;\n}\n\na {\n    color: inherit;\n    font-size: 18px;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),transform 250ms cubic-bezier(0.4, 0, 0.2, 1),-webkit-transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover, &:focus, &:active {\n        color: red;\n        \n    }\n}\n\n`","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\npadding: 16px;\ninput {\n    padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n}\nbutton {\n    padding: 8px 32px;\n    border-radius: 4px;\n    font: inherit;\n    margin-left: 4px;\n    background-color: transparent;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),transform 250ms cubic-bezier(0.4, 0, 0.2, 1),-webkit-transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover, &:focus, &:active {\n        color: orangered;\n}\n\n}\n\n`","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/api';\n\nimport { StyledDiv } from '../Home/Home.styled';\nimport { StyledForm } from './Movies.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('movieQuery') ?? '';\n\n  // const updateQueryString = (evt) => {\n  //     if (evt.target.value === \"\") {\n  //         return setSearchParams({});\n\n  //     }\n  //     return setSearchParams({movieQuery: evt.target.value});\n\n  // }\n\n  const getMoviesOnSearch = async query => {\n    setIsLoading(true);\n    try {\n      const data = await searchMovies(query);\n      if (!data.results.length) {\n        throw new Error('There is no movies on your query! :( ');\n      }\n      console.log('data.total_results :>> ', data.total_results);\n      setMovies(data.results);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSearchSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    setSearchParams({ movieQuery: form.elements.search.value.trim() });\n    setMovies([]);\n    setError(false);\n\n    form.reset();\n\n    // setPage(1);\n  };\n\n  useEffect(() => {\n    if (!movieQuery) {\n      return;\n    }\n    getMoviesOnSearch(movieQuery);\n  }, [movieQuery]);\n\n  return (\n    <StyledDiv>\n      <StyledForm onSubmit={handleSearchSubmit}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          placeholder=\"Search movies...\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <button type=\"submit\">SEARCH</button>\n      </StyledForm>\n      {error && <p>{error.message} Please try again!</p>}\n      {isLoading && <Loader />}\n      <ul>\n        {movies?.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: `/movies?movieQuery=${movieQuery}` }}\n              >\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </StyledDiv>\n  );\n};\n\nexport default Movies;\n\n// монтируем страницу коллекции, делаем хттп запрос по квери, рисуем по результатам список и кажд оборач в линк\n// Коллекция хранится в стейте, а фильтр – в строке\n// И мы можем использ значение параметра из строки и наш массив, чтобы отфильтр только те, ке подходят под условия\n// в юз эффект делаем запрос по квери и запис результат в стейт\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'db7375c0f22b53ce13cc7eb00cc2cfa1';\nconst trendingOptions = `trending/movie/day?api_key=${API_KEY}`;\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${trendingOptions}`\n  );\nreturn response.data;\n};\n\nexport const fetchMovieDetails = async (id) => {\n    const response = await axios.get(\n        `movie/${id}?api_key=${API_KEY}&language=en-US`\n      );\n      \n    return response.data;\n}\n\n\nexport const fetchCast = async (id) => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  \nreturn response.data;\n}\n\nexport const fetchReviews = async (id) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  \nreturn response.data;\n}\n\n\nexport const searchMovies = async (query) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  \nreturn response.data;\n}\n\n\n"],"names":["Loader","props","viewBox","height","width","color","backgroundColor","style","cx","cy","r","metadata","name","github","description","filename","StyledDiv","styled","StyledForm","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","movieQuery","get","getMoviesOnSearch","query","searchMovies","data","results","length","Error","console","log","total_results","useEffect","onSubmit","event","preventDefault","form","target","elements","search","value","trim","reset","type","placeholder","autoComplete","autoFocus","message","map","id","title","Link","to","state","from","axios","API_KEY","trendingOptions","fetchTrendingMovies","response","fetchMovieDetails","fetchCast","fetchReviews"],"sourceRoot":""}